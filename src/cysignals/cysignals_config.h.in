/*
 * Should cysignals be compiled with support for verbose debugging
 * output? The debug level itself needs to be set using the C function
 * _set_debug_level() or the Python function set_debug_level().
 * Enabling this will make the code slower, even if the debug level is
 * set to 0.
 */
#ifndef ENABLE_DEBUG_CYSIGNALS
#undef ENABLE_DEBUG_CYSIGNALS
#endif


/*
 * Should sig_on() use sigsetjmp(env, 0) instead of setjmp(env)? This
 * is needed on BSD and OS X because setjmp() saves the signal mask.
 * With glibc, we also use sigsetjmp because it's faster.
 */
#ifndef CYSIGNALS_USE_SIGSETJMP
#undef CYSIGNALS_USE_SIGSETJMP
#endif


/* Should we use an assembly implementation of cysetjmp()? */
#ifndef CYSIGNALS_ASM_CYSETJMP
#undef CYSIGNALS_ASM_CYSETJMP
#endif


/* Which implementation of atomic variables (if any) to use? */
#ifndef __cplusplus
#undef CYSIGNALS_C_ATOMIC
#else
#undef CYSIGNALS_CXX_ATOMIC
#undef CYSIGNALS_STD_ATOMIC
#endif

#if !defined(__MINGW32__) && !defined(_WIN32)
#define POSIX
#else
/*
define unused signals for windows and give each a different value to compile
when two or more a these signals are used in the same switch.
*/
#define SIGHUP SIGTERM
#define SIGBUS SIGSEGV
#define SIGALRM SIGINT
#define SIGQUIT SIGTERM
#endif
